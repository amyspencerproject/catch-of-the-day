{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","propsTypes","PropTypes","object","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descriptionRef","imageRef","createFish","e","fish","name","price","parseFloat","status","description","image","addFish","currentTarget","reset","typed","propTyes","func","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","desc","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","constext","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.082da558.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {getFunName} from '../helpers';\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n\n    static propsTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = (event) => { \n        //1. stop form from submitting/stop browser from reloading\n        event.preventDefault();\n        //2. get text from the input\n        const storeName = this.myInput.current.value;\n        //3. change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n    }\n\n    render() {\n        return (\n            <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}> \n                <h2>Please enter a store</h2>\n                <input \n                    type=\"text\" \n                    ref = {this.myInput}\n                    required placeholder= \"Store Name\" \n                    defaultValue={getFunName()} \n                />\n                <button type=\"submit\">Visit Store → </button>\n            </form>\n        );\n    } \n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes  from \"prop-types\";\n\n//stateless functional component can be used because no state in header only data passed in and JSX returned\nconst Header = (props) => (\n            <header className=\"top\">\n                <h1>Catch \n                <span className=\"ofThe\"> \n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n                </span> \n                Day</h1>\n                <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n                </h3>\n            </header>\n        )\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\n//state functional component which uses this. and would handle more complex data flow than stateless\n// class Header extends React.Component {\n//     render() {\n//         return (\n//             <header className=\"top\">\n//                 <h1>Catch \n//                 <span className=\"ofThe\"> \n//                 <span className=\"of\">Of</span>\n//                 <span className=\"the\">The</span>\n//                 </span> \n//                 Day</h1>\n//                 <h3 className=\"tagline\">\n//                 <span>{this.props.tagline}</span>\n//                 </h3>\n//             </header>\n//         )\n//     }\n// }\n\nexport default Header;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descriptionRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTyes = {\n        addFish: PropTypes.func\n    };\n\n    createFish = e => {\n        e.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            description: this.descriptionRef.current.value,\n            image: this.imageRef.current.value,\n        };\n        this.props.addFish(fish);\n        //refesh the form\n        e.currentTarget.reset();\n    }\n\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef} type=\"text\" placeholder=\"Status\">\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"description\" ref={this.descriptionRef} placeholder=\"Description\"></textarea>\n                <input name = \"image\" ref={this.imageRef} typed=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string, \n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        deleteFish: PropTypes.func,\n        updateFish: PropTypes.func\n    };\n\n    handleChange = (e) => {\n        // console.log(e.currentTarget.name);\n        // console.log(e.currentTarget.value);\n        // console.log(updatedFish);\n\n        // 1. take a copy of current fish\n        const updatedFish = { \n            ...this.props.fish,\n            //computed property names which is new in es6\n            //e.currentTarget.name will notice when anything is changed bc name is a property for each field}\n            [e.currentTarget.name]: e.currentTarget.value\n         };\n         this.props.updateFish(this.props.index, updatedFish);\n    };\n\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.name} \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.price}\n                />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea \n                    name=\"description\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.desc}\n                >\n                </textarea>\n                <input \n                    type=\"text\" \n                    name=\"image\"  \n                    onChange={this.handleChange} \n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In With Twitter</button>\n\n    </nav>\n\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","// ***** from video *****\n// import Rebase from \"re-base\";\n// import firebase from \"firebase\";\n\n// ***** from Slack, maybe try importing theses *******\nimport Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\n\n// ****** Warning in Console Log ********\n// It looks like you're using the development build of the Firebase JS SDK.\n// When deploying Firebase apps to production, it is advisable to only import\n// the individual SDK components you intend to use.\n\n// For the module builds, these are available in the following manner\n// (replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\n\n// CommonJS Modules:\n// const firebase = require('firebase/app');\n// require('firebase/<PACKAGE>');\n// *******\n\n\nconst firebaseApp = firebase.initializeApp(\n    {\n        apiKey: \"AIzaSyDZgpWuuPn5_2HiyV4x80IqhDZsuLV3KXs\",\n        authDomain: \"catch-amy.firebaseapp.com\",\n        databaseURL: \"https://catch-amy-default-rtdb.firebaseio.com\",\n    }\n);\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//this is a named export \nexport { firebaseApp };\n\n//this is a default export\nexport default base;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database'\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        addFish: PropTypes.func,\n        loadSampelFishes: PropTypes.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    //when browser is refreshed this will check to see if we are logged in\n    componentDidMount() {\n        firebase\n        .auth()\n        .onAuthStateChanged( user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    } \n\n    authHandler = async (authData) => {\n        // console.log(authData);\n        // 1. first we need to look up store in firebase database\n        const store = await base.fetch(this.props.storeId, { constext: this });\n        // console.log(store);\n        // 2. claim it if we are the first owner\n        if (!store.owner)\n        //save it as our own. \n        //the /owner creates owner field and user.uid saves a unique identifier (could also use email for id)\n        await base.post(`${this.props.storeId}/owner`, {\n            data: authData.user.uid\n        })\n        // 3. set the state of the inventory comoponenet to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    };\n\n    authenticate = (provider) => {\n        // alert(provider)\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('logging out');\n        await firebase\n        .auth()\n        .signOut();\n        this.setState({uid: null});\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Logout</button>\n\n        // 1. Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate}/>;\n        }\n\n        // 2. check if they are NOT the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return(\n                <div>\n                    <p>Sorry you are not the owner</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. the must be the owner so show the inventory\n       \n        return (\n            <div className=\"inventory\">\n                <h2>Inventory!!!</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key}\n                        index={key} \n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div> \n        )\n    }\n}\n\nexport default Inventory;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    static propsTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    };\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available'\n        const transitionOptions = {\n            classNames: \"order\",\n            key: key,\n            timeout: {enter:500, exit:500}\n        };\n\n        //make sure the fish is loaded before we continue\n        if (!fish) return null;\n\n        if(!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions} >\n                    <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n                </CSSTransition>\n            );\n        }\n        \n        return (\n            <CSSTransition {...transitionOptions} >\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{enter:500, exit:500}}><span>{count}</span></CSSTransition>\n                        </TransitionGroup>\n                        \n                        lbs {fish.name}\n                        {formatPrice(count*fish.price)}\n                        <button onClick={ () => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + (count * fish.price)\n            }\n            return prevTotal;   \n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total: <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {formatPrice} from \"../helpers\";\n\nclass Fish extends React.Component {\n\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string, \n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func,\n        index: PropTypes.string\n    };\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);  \n    };\n\n    render() {\n        const {image, name, desc, price, status} = this.props.details;\n        //es6 way around typing out each const used in JSX\n       const isAvailable = status === \"available\";\n\n        return (\n            <li className=\"menu-fish\">\n            <img src={image} alt={name}/>\n            <h3 className=\"fish-name\">{name}\n            <span className=\"price\">{formatPrice(price)}</span>\n            </h3>\n            <p>{desc}</p>\n            <button disabled={!isAvailable} \n                onClick = {this.handleClick}>\n                {isAvailable ? 'Add To Order' : 'Sold Out!'}\n            </button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount() {\n        const {params} = this.props.match;\n        //first reinstate localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        // console.log(localStorageRef);\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n            //sycState needs an object and this directs it to state: fishes and not state: order\n            //order will be handled in local storage\n        });\n    };\n\n    componentDidUpdate() {\n        // console.log(this.state.order);\n        //storeId is the key and order is the value for setItem()\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    };\n\n    componentWillUnmount() {\n        // console.log(\"Unmouinting\");\n        base.removeBinding(this.ref);\n    };\n\n    addFish = (fish) => {\n        //1. take a copy of existing state\n        const fishes = { ... this.state.fishes }\n        //2. add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`]=fish \n        //3. set the new fishes object to state\n        this.setState({\n            fishes: fishes\n        })\n    };\n\n    updateFish = (key, updatedFish) => {\n        //1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        //2. update that state\n        fishes[key] = updatedFish;\n        //3. set that to state\n        this.setState({fishes});\n    }\n\n    deleteFish = (key) => {\n        // take a copy of state\n        const fishes = { ...this.state.fishes };\n        // update state by setting fish to null (firebase needs a null to delete)\n        fishes[key] = null;\n        //set state \n        this.setState({fishes});\n    }\n\n    loadSampleFishes = () => {\n        this.setState({fishes: sampleFishes}) //this sampleFishes is what we called the import of sample-fishes.js\n    };\n\n    addToOrder = (key) => {\n        //1. copy the state object\n        const order = { ...this.state.order};\n        //2. either add order to state or update the quantity in the order\n        order[key] = order[key] + 1 || 1;\n        //3. call setState to update the state object\n        this.setState({order});\n    };\n\n    removeFromOrder = (key) => {\n        //1. copy the state object\n        const order = { ...this.state.order};\n        //2. delete from order without null since order is not mirrored in firebase\n        delete order[key];\n        //3. call setState to update the state object\n        this.setState({order});\n    };\n\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline = \"Fresh Seafood Market\" />\n                    <ul className=\"fishes\"> \n                        {Object.keys(this.state.fishes).map(key => \n                            <Fish \n                                key={key} \n                                details={this.state.fishes[key]}\n                                index={key} \n                                addToOrder={this.addToOrder} \n                            />\n                        )} \n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes}\n                order={this.state.order}\n                removeFromOrder={this.removeFromOrder}/>\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes} \n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n\n ","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!!!</h2>\n    </div>\n\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}